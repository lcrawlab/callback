[{"path":"https://lcrawlab.github.io/callback/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 callback authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://lcrawlab.github.io/callback/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Alan DenAdel. Author, maintainer.","code":""},{"path":"https://lcrawlab.github.io/callback/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DenAdel (2024). callback: Knockoff Calibration Method Avoid -Clustering scRNAseq Data. R package version 0.0.0, https://lcrawlab.github.io/callback/.","code":"@Manual{,   title = {callback: A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data},   author = {Alan DenAdel},   year = {2024},   note = {R package version 0.0.0},   url = {https://lcrawlab.github.io/callback/}, }"},{"path":[]},{"path":"https://lcrawlab.github.io/callback/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data","text":"Standard single-cell RNA-sequencing (scRNA-seq) pipelines nearly always include unsupervised clustering key step identifying biologically distinct cell types. follow-step pipelines test differential expression identified clusters. algorithms -cluster, downstream analyses produce inflated P-values resulting increased false discoveries. , present callback (Calibrated Clustering via Knockoffs): new method protecting -clustering controlling impact double-dipping. Importantly, approach can applied clustering algorithm (implemented Louvain, Leiden, K-means, hierarchical clustering algorithms). callback provides state---art clustering performance can rapidly analyze large-scale scRNA-seq studies, even personal laptop.","code":""},{"path":"https://lcrawlab.github.io/callback/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data","text":"can install lastest development version using devtools library. install package devtools, use command: Although explicitly dependency, making sure presto installed make callback much faster.","code":"devtools::install_github(\"lcrawlab/callback\") devtools::install_github(\"immunogenomics/presto\")"},{"path":"https://lcrawlab.github.io/callback/index.html","id":"tutorial","dir":"","previous_headings":"","what":"Tutorial","title":"A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data","text":"","code":"library(Seurat) library(SeuratData)  library(callback)  set.seed(123)  # load pbmc3k dataset SeuratData::InstallData(\"pbmc3k\") data(\"pbmc3k\")  pbmc3k <- UpdateSeuratObject(pbmc3k)  pbmc3k <- NormalizeData(pbmc3k) pbmc3k <- FindVariableFeatures(pbmc3k) pbmc3k <- ScaleData(pbmc3k) pbmc3k <- RunPCA(pbmc3k) pbmc3k <- FindNeighbors(pbmc3k) pbmc3k <- RunUMAP(pbmc3k, dims = 1:10)  pbmc_default <- FindClusters(pbmc3k) pbmc_callback <- FindClustersCallback(pbmc3k)  DimPlot(pbmc_default) + DimPlot(pbmc_callback)"},{"path":"https://lcrawlab.github.io/callback/index.html","id":"overview-of-the-method","dir":"","previous_headings":"","what":"Overview of the Method","title":"A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data","text":"callback algorithm consists three simple steps: First, generate synthetic null variables, formally called knockoff features, augment single-cell data analyzed “fake” genes known contribute unique cell type. Second, perform preprocessing clustering augmented dataset. Third, calibrate number inferred clusters using hypothesis testing strategy data-dependent threshold determine statistically significant difference groups. pair groups statistically significant differences re-clustering occurs. synthetic knockoff genes act negative control variables; go analytic steps real data presented opportunity identified marker genes. callback algorithm uses guiding principle well-calibrated clusters (.e., representing real groups) significantly differentially expressed genes correcting multiple hypothesis tests, -clustered groups . use rule iteratively re-cluster cells inferred clusters well-calibrated observed differences expression groups due effects double-dipping.","code":""},{"path":"https://lcrawlab.github.io/callback/index.html","id":"relevant-citations","dir":"","previous_headings":"","what":"Relevant Citations","title":"A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data","text":"callback currently bioRxiv, . . DenAdel, M. Ramseier, . Navia, . Shalek, S. Raghavan, P. Winter, . Amini, L. Crawford. knockoff calibration method avoid -clustering single-cell RNA-sequencing. bioRxiv.","code":""},{"path":"https://lcrawlab.github.io/callback/index.html","id":"questions-and-feedback","dir":"","previous_headings":"","what":"Questions and Feedback","title":"A Knockoff Calibration Method to Avoid Over-Clustering in scRNAseq Data","text":"questions concerns callback, please contact Alan DenAdel Lorin Crawford. feedback software, manuscript, tutorials appreciated.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCallback.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — FindClustersCallback","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — FindClustersCallback","text":"Given Seurat object, returns new Seurat normalized, variable features identified, scaled, principal components computed, hadclusters identified, tSNE UMAP embeddings determined.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCallback.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — FindClustersCallback","text":"","code":"FindClustersCallback(   seurat_obj,   resolution_start = 0.8,   reduction_percentage = 0.2,   num_clusters_start = 20,   dims = 1:10,   algorithm = \"louvain\",   assay = \"RNA\",   cores = 1,   verbose = TRUE )"},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCallback.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — FindClustersCallback","text":"seurat_obj Seurat object analyzed. resolution_start starting resolution used clustering algorithm (Louvain Leiden algorithms). reduction_percentage amount starting parameter reduced iteration (0 1). num_clusters_start starting number clusters used clustering algorithm (K-means Hierarchical clustering algorithms). dims dimensions use input features (.e. 1:10). algorithm clustering algorithm used. assay assay generate knockoffs . cores number cores compute marker genes parallel. verbose Whether show logging.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/FindClustersCallback.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — FindClustersCallback","text":"Returns Seurat object idents updated clusters determined via callback algorithm. Latest clustering results stored object metadata callback_clusters'. Note 'callback_clusters' overwritten ever time FindClustersKC run.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"Given two Seurat objects, returns  genes selected knockoff filter W statistics.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"","code":"compute_knockoff_filter(   seurat_obj,   cluster1,   cluster2,   q,   return_all = FALSE,   num_cores = 1 )"},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"seurat_obj Seurat object cluster1 Idents cluster interest seurat_obj1 cluster2 Idents cluster interest seurat_obj2 q desired rate control FDR return_all Determines returned object contain genes just selected genes. num_cores number cores computing marker genes parallel.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/compute_knockoff_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the genes selected by the knockoff filter — compute_knockoff_filter","text":"todo","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"Given data, computes maximum likelihood estimators zero-infalted Poisson distribution.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"","code":"estimate_zi_poisson(data)"},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"data data estimate parameters .","code":""},{"path":"https://lcrawlab.github.io/callback/reference/estimate_zi_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — estimate_zi_poisson","text":"Maximum likelihood estimators zero-inflated Poisson distribution","code":""},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_knockoffs.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a Seurat object that contains additional (fake) RNA\nexpression counts in the form of knockoffs. — get_seurat_obj_with_knockoffs","title":"Returns a Seurat object that contains additional (fake) RNA\nexpression counts in the form of knockoffs. — get_seurat_obj_with_knockoffs","text":"Given Seurat object, returns new Seurat object whose RNA expression counts includes variable features original object equal number knockoff features.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_knockoffs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a Seurat object that contains additional (fake) RNA\nexpression counts in the form of knockoffs. — get_seurat_obj_with_knockoffs","text":"","code":"get_seurat_obj_with_knockoffs(seurat_obj, assay = \"RNA\", verbose = TRUE)"},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_knockoffs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a Seurat object that contains additional (fake) RNA\nexpression counts in the form of knockoffs. — get_seurat_obj_with_knockoffs","text":"seurat_obj Seurat object containing RNA expression counts. assay assay generate knockoffs . verbose Whether show logging.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/get_seurat_obj_with_knockoffs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a Seurat object that contains additional (fake) RNA\nexpression counts in the form of knockoffs. — get_seurat_obj_with_knockoffs","text":"Seurat object contains original variable features equal number knockoff features.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"Given number samples desired, Poisson parameter, lambda, zero proportion, prop.zero, simulates number desired samples ZIP(lambda, prop.zero).","code":""},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"","code":"rzipoisson(n, lambda, prop.zero)"},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"n number samples simulated. lambda Poisson rate parameter. prop.zero proportion excess zeroes.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/rzipoisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random data generation for the zero-infalted Poisson distribution\nwith Poisson parameter lambda and zero proportion prop.zero. — rzipoisson","text":"Simulated data ZIP(lambda, prop.zero).","code":""},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — seurat_workflow","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — seurat_workflow","text":"Given Seurat object, returns new Seurat normalized, variable features identified, scaled, principal components computed, clusters identified, tSNE UMAP embeddings determined.","code":""},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — seurat_workflow","text":"","code":"seurat_workflow(   seurat_obj,   num_variable_features,   resolution_param = 0.8,   visualization_method = \"umap\",   num_dims = 10,   algorithm = \"louvain\" )"},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — seurat_workflow","text":"seurat_obj Seurat object analyzed. num_variable_features number variable features use analysis. resolution_param resolution parameter use clustering. visualization_method Either \"umap\" \"tsne\". num_dims number principal components use. algorithm clustering algorithm use, either \"louvain\" \"leiden\".","code":""},{"path":"https://lcrawlab.github.io/callback/reference/seurat_workflow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Runs a typical Seurat workflow on a Seurat object (up to\ndimensionality reduction and clustering). — seurat_workflow","text":"Seurat object containing relevant analysis results.","code":""}]
